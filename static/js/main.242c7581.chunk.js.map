{"version":3,"sources":["components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","process","then","res","data","message","body","catch","err","console","log","props","children","Component","Consumer","Spinner","Track","track","artist_name","track_name","album_name","react_router_dom","to","track_id","Tracks","undefined","layout_Spinner","Fragment","map","item","tracks_Track","Search","trackTitle","onChange","e","defineProperty","target","name","findTrack","preventDefault","onSubmit","bind","placeholder","Index","tracks_Search","tracks_Tracks","Lyrics","lyrics","match","params","id","_this$state","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","dist_default","format","updated_time","App","context_Provider","layout_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iPAUeA,MARf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,mCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,gCAAlB,gFCFFC,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAMC,GACrB,OAAOA,EAAOC,MACZ,IAAK,gBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,WAAYJ,EAAOK,QACnBC,QAAS,mBAEb,QACE,OAAOP,IAIFQ,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAR,OAAAiB,EAAA,EAAAjB,CAAAU,MAAAH,EAAAP,OAAAkB,EAAA,EAAAlB,CAAAK,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,MACEjB,MAAQ,CACJK,WAAY,GACZE,QAAS,gBACTkB,SAAU,SAAAxB,GAAM,OAAIU,EAAKe,SAAS,SAAA1B,GAAK,OAAID,EAAQC,EAAMC,OAJ/DU,EAAA,OAAAR,OAAAwB,EAAA,EAAAxB,CAAAK,EAAAC,GAAAN,OAAAyB,EAAA,EAAAzB,CAAAK,EAAA,EAAAqB,IAAA,oBAAAC,MAAA,WAOsB,IAAAC,EAAAlB,KAClBmB,IAAMC,IAAN,8JAAAT,OAAwKU,qCACvKC,KAAK,SAAAC,GACFL,EAAKL,SAAS,CAACrB,WAAY+B,EAAIC,KAAKC,QAAQC,KAAKlC,eAEpDmC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAZ9B,CAAAZ,IAAA,SAAAC,MAAA,WAgBI,OACItC,EAAAC,EAAAC,cAACE,EAAQY,SAAT,CAAkBsB,MAASjB,KAAKb,OAC3Ba,KAAK+B,MAAMC,cAlBxBrC,EAAA,CAA8BsC,aAwBjBC,EAAWnD,EAAQmD,SChCjBC,MARf,WACE,OACExD,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UAAjB,eCkBWsD,MAnBf,SAAeL,GAAO,IACXM,EAASN,EAATM,MACT,OACE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,uBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACZH,EAAAC,EAAAC,cAAA,UAAKwD,EAAMC,aACX3D,EAAAC,EAAAC,cAAA,KAAGC,UAAY,aACXH,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,KAAGC,UAAY,gBAAvB,UADJ,KAC+DuD,EAAME,WACjE5D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,KAAGC,UAAY,wBAAvB,UAHJ,KAGuEuD,EAAMG,YAE7E7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAM3D,UAAY,yBAAyB4D,GAAE,gBAAA/B,OAAoB0B,EAAMM,WAAYhE,EAAAC,EAAAC,cAAA,KAAGC,UAAY,yBAAlG,oBCgBG8D,mLAxBX,OACEjE,EAAAC,EAAAC,cAACqD,EAAD,KACK,SAAAjB,GAAS,IACCzB,EAAsByB,EAAtBzB,WAAWE,EAAWuB,EAAXvB,QAClB,YAAkBmD,IAAfrD,GAAkD,IAAtBA,EAAWW,OACjCxB,EAAAC,EAAAC,cAACiE,EAAD,MAGHnE,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,SAAP,KACIpE,EAAAC,EAAAC,cAAA,MAAIC,UAAY,oBAAoBY,GACpCf,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OAChBU,EAAWwD,IAAI,SAAAC,GAAI,OAChBtE,EAAAC,EAAAC,cAACqE,EAAD,CAAOb,MAASY,EAAKZ,MAAOrB,IAAOiC,EAAKZ,MAAMM,wBAdrDV,qBC6CNkB,6MA7CXhE,MAAQ,CACJiE,WAAa,MAGjBC,SAAW,SAACC,GACRxD,EAAKe,SAALvB,OAAAiE,EAAA,EAAAjE,CAAA,GACKgE,EAAEE,OAAOC,KAAQH,EAAEE,OAAOvC,WAInCyC,UAAY,SAAC9C,EAAU0C,GACnBA,EAAEK,iBACFxC,IAAMC,IAAN,8FAAAT,OAAwGb,EAAKX,MAAMiE,WAAnH,oDAAAzC,OAAgLU,qCAC/KC,KAAK,SAAAC,GACFX,EAAS,CACLvB,KAAM,gBACNI,QAAS8B,EAAIC,KAAKC,QAAQC,KAAKlC,aAEnCM,EAAKe,SAAS,CAACuC,WAAY,OAE9BzB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,8EAErB,IAAAV,EAAAlB,KACL,OACArB,EAAAC,EAAAC,cAACqD,EAAD,KACK,SAAAjB,GAAS,IACCL,EAAYK,EAAZL,SACP,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,2BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,yBAChBH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,iBADf,sBAEAH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,oBAAf,+BACAH,EAAAC,EAAAC,cAAA,QAAM+E,SAAY1C,EAAKwC,UAAUG,KAAK3C,EAAKN,IACvCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,cACbH,EAAAC,EAAAC,cAAA,SAAOQ,KAAO,OAAOP,UAAY,+BAA+BgF,YAAc,gBAAgBL,KAAO,aAAaxC,MAASC,EAAK/B,MAAMiE,WAAYC,SAAYnC,EAAKmC,YAEvK1E,EAAAC,EAAAC,cAAA,UAAQC,UAAY,wCAAwCO,KAAO,UAAnE,yBArCP4C,aCSN8B,MATf,WACE,OACEpF,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,SAAP,KACIpE,EAAAC,EAAAC,cAACmF,EAAD,MACArF,EAAAC,EAAAC,cAACoF,EAAD,yBC2COC,6MA5CX/E,MAAQ,CACJkD,MAAO,GACP8B,OAAQ,uFAGQ,IAAAjD,EAAAlB,KAChBmB,IAAMC,IAAN,mGAAAT,OAA6GX,KAAK+B,MAAMqC,MAAMC,OAAOC,GAArI,YAAA3D,OAAkJU,qCACjJC,KAAK,SAAAC,GAEF,OADAL,EAAKL,SAAS,CAACsD,OAAQ5C,EAAIC,KAAKC,QAAQC,KAAKyC,SACtChD,IAAMC,IAAN,4FAAAT,OAAsGO,EAAKa,MAAMqC,MAAMC,OAAOC,GAA9H,YAAA3D,OAA2IU,uCACnJC,KAAK,SAAAC,GACJL,EAAKL,SAAS,CAACwB,MAAOd,EAAIC,KAAKC,QAAQC,KAAKW,UAE/CV,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAErB,IAAA2C,EACoBvE,KAAKb,MAAtBkD,EADHkC,EACGlC,MAAM8B,EADTI,EACSJ,OACd,YAAatB,IAAVR,QACYQ,IAAXsB,GAC8B,IAA9B7E,OAAOkF,KAAKnC,GAAOlC,QACY,IAA/Bb,OAAOkF,KAAKL,GAAQhE,OACbxB,EAAAC,EAAAC,cAACiE,EAAD,MAGHnE,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,SAAP,KACIpE,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMC,GAAK,IAAI5D,UAAY,4BAA3B,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,eACXuD,EAAME,WADX,IACuB5D,EAAAC,EAAAC,cAAA,QAAMC,UAAY,kBAAlB,MAAuCuD,EAAMC,cAEpE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAa,aACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,aAAaqF,EAAOM,eAG3C9F,EAAAC,EAAAC,cAAA,MAAIC,UAAY,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,mBAAkBH,EAAAC,EAAAC,cAAA,4BAA4BwD,EAAMqC,UACpE/F,EAAAC,EAAAC,cAAA,MAAIC,UAAY,mBAAkBH,EAAAC,EAAAC,cAAA,8BAA8BwD,EAAMsC,eAAeC,iBAAiB,GAAKvC,EAAMsC,eAAeC,iBAAiB,GAAGC,YAAYC,iBAAmB,iBACnLnG,EAAAC,EAAAC,cAAA,MAAIC,UAAY,mBAAkBH,EAAAC,EAAAC,cAAA,gCAA+BF,EAAAC,EAAAC,cAACkG,EAAAnG,EAAD,CAAQoG,OAAS,QAAQ3C,EAAM4C,wBAtChGhD,aCoBNiD,MAlBf,WACE,OACEvG,EAAAC,EAAAC,cAACsG,EAAD,KACExG,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,KACE9D,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,SAAP,KACEpE,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACfH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,iBAAiBC,UAAazB,IAClDpF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,iCAAiCC,UAAatB,UCL5DuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxB,MACvB,2DCZNyB,IAASC,OAAOnH,EAAAC,EAAAC,cAACkH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9E,KAAK,SAAA+E,GACjCA,EAAaC","file":"static/js/main.242c7581.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className = \"navbar navbar-dark bg-dark mb-5\">\r\n        <span className = \"navbar-brand mb-0 h1 mx-auto\">Lyrics Finder</span>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state,action) => {\r\n  switch(action.type){\r\n    case \"SEARCH_TRACKS\":\r\n      return {\r\n          ...state,\r\n          track_list: action.payload,\r\n          heading: \"Search Results\",    \r\n      };\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n      track_list: [],\r\n      heading: \"Top 10 Tracks\",\r\n      dispatch: action => this.setState(state => reducer(state,action))\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=in&f_has_lyrics=1&apikey=${process.env.REACT_APP_API_KEY}`)\r\n    .then(res => {\r\n        this.setState({track_list: res.data.message.body.track_list})\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n  \r\n    render() {\r\n    return (\r\n        <Context.Provider value = {this.state}>\r\n            {this.props.children}\r\n        </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n","import React from 'react'\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className = \"loader\">\r\n      Loading...\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Track(props) {\r\n    const {track} = props;\r\n  return (\r\n    <div className = \"col-md-6\">\r\n      <div className = \"card mb-4 shadow-sm\">\r\n        <div className =\"card-body\">\r\n            <h5>{track.artist_name}</h5>\r\n            <p className = \"card-text\">\r\n                <strong><i className = \"fas fa-play\"></i> Track</strong>: {track.track_name}\r\n                <br/>\r\n                <strong><i className = \"fas fa-compact-disc\"></i> Album</strong>: {track.album_name}\r\n            </p>\r\n            <Link className = \"btn btn-dark btn-block\" to = {`lyrics/track/${track.track_id}`}><i className = \"fas fa-chevron-right\"></i> View Lyrics</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Track;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Spinner from '../layout/Spinner';\r\nimport Track from './Track';\r\n\r\nclass Tracks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n          {value => {\r\n              const {track_list,heading} = value;\r\n              if(track_list === undefined || track_list.length === 0){\r\n                return <Spinner/>\r\n              }else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <h3 className = \"text-center mb-4\">{heading}</h3>\r\n                        <div className = \"row\">\r\n                        {track_list.map(item => (\r\n                            <Track track = {item.track} key = {item.track.track_id}/>\r\n                        ))}\r\n                        </div>\r\n                    </React.Fragment> \r\n                )\r\n              }\r\n          }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tracks;","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport {Consumer} from '../../context';\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        trackTitle : '',\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value,\r\n        })\r\n    }\r\n\r\n    findTrack = (dispatch, e) => {\r\n        e.preventDefault();\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${process.env.REACT_APP_API_KEY}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: \"SEARCH_TRACKS\",\r\n                payload: res.data.message.body.track_list\r\n            });\r\n            this.setState({trackTitle: \"\"})\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n        <Consumer>\r\n            {value => {\r\n                const {dispatch} = value;\r\n                return (\r\n                    <div className = \"card card-body mb-4 p-4\">\r\n                        <h1 className = \"display-4 text-center\">\r\n                        <i className = \"fas fa-music\"></i> Search For A Song</h1>\r\n                        <p className = \"lead text-center\">Get the lyrics for any song</p>\r\n                        <form onSubmit = {this.findTrack.bind(this,dispatch)}>\r\n                            <div className = \"form-group\">\r\n                                <input type = \"text\" className = \"form-control form-control-lg\" placeholder = \"Song title...\" name = \"trackTitle\" value = {this.state.trackTitle} onChange = {this.onChange}/>\r\n                            </div>\r\n                            <button className = \"btn btn-lg btn-block mb-5 btn-primary\" type = \"submit\">Get Lyrics</button>\r\n                        </form>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Search;\r\n","import React from 'react';\r\nimport Tracks from '../tracks/Tracks';\r\nimport Search from '../tracks/Search';\r\n\r\nfunction Index() {\r\n  return (\r\n    <React.Fragment>\r\n        <Search/>\r\n        <Tracks/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Index;\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport Moment from 'react-moment';\r\n\r\nclass Lyrics extends Component {\r\n    state = {\r\n        track: {},\r\n        lyrics: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_API_KEY}`)\r\n        .then(res => {\r\n            this.setState({lyrics: res.data.message.body.lyrics})\r\n            return axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_API_KEY}`)\r\n        }).then(res => {\r\n            this.setState({track: res.data.message.body.track})\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        const { track,lyrics } = this.state;\r\n        if(track === undefined || \r\n            lyrics === undefined || \r\n            Object.keys(track).length === 0 || \r\n            Object.keys(lyrics).length === 0) {\r\n            return <Spinner/>\r\n        }else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to = \"/\" className = \"btn btn-dark btn-sm mb-4\">Back</Link>\r\n                    <div className = \"card\">\r\n                        <h5 className = \"card-header\">\r\n                            {track.track_name} <span className = \"text-secondary\">by {track.artist_name}</span>\r\n                        </h5>\r\n                        <div className =  \"card-body\">\r\n                            <p className = \"card-text\">{lyrics.lyrics_body}</p>\r\n                        </div>\r\n                    </div>\r\n                    <ul className = \"list-group mt-3\">\r\n                     <li className = \"list-group-item\"><strong>Album ID: </strong>{track.album_id}</li>\r\n                     <li className = \"list-group-item\"><strong>Song Genre: </strong>{track.primary_genres.music_genre_list[0] ? track.primary_genres.music_genre_list[0].music_genre.music_genre_name : \"Not available\"}</li>\r\n                     <li className = \"list-group-item\"><strong>Release Date: </strong><Moment format = \"YYYY\">{track.updated_time}</Moment></li>\r\n                    </ul>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Lyrics;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Lyrics from './components/tracks/Lyrics';\nimport { Provider } from './context';\n\nfunction App() {\n  return (\n    <Provider>\n      <BrowserRouter>\n        <React.Fragment>\n          <Navbar/>\n          <div className = \"container\">\n            <Switch>\n              <Route exact path = \"lyrics-finder/\" component = {Index}/>\n              <Route exact path = \"lyrics-finder/lyrics/track/:id\" component = {Lyrics}/>\n            </Switch>\n          </div>\n        </React.Fragment>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}